const { Client, GatewayIntentBits, Events, ActionRowBuilder, EmbedBuilder, ButtonBuilder, ButtonStyle, ModalBuilder, TextInputBuilder, TextInputStyle } = require('discord.js');
const { REST } = require('@discordjs/rest');
const { Routes } = require('discord-api-types/v9');

const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent] });

const TOKEN = 'MTM0NTYyMDA4NzE3NjAzNjQyMw.GDQwPZ.vtvjC_BzxIbU3XXB0k9zts3DmVE7Ed-T44NA3A';

client.once(Events.ClientReady, () => {
    console.log(`Logged in as ${client.user.tag}!`);
});

client.on(Events.MessageCreate, async message => {
    if (message.content === '!botBuild') {
        const button = new ButtonBuilder()
            .setCustomId('openModal')
            .setLabel('–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
            .setStyle(ButtonStyle.Primary);

        const row = new ActionRowBuilder().addComponents(button);

        const embed = new EmbedBuilder()
            .setTitle('üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å')
            .setDescription('–ß—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∏–∂–µ')
            .setImage('https://cdn.discordapp.com/attachments/1299609343829737512/1345680608331956234/3195971296aa5178.jpg?ex=67c56e3a&is=67c41cba&hm=bce97493cef3c1c560486a4fcc94b2c435f5f747aa87e27eec2db58618681782&');

        await message.channel.send({ embeds: [embed], components: [row] });

        //await message.channel.send({ files: ['https://cdn.discordapp.com/attachments/1299609343829737512/1345680608331956234/3195971296aa5178.jpg?ex=67c56e3a&is=67c41cba&hm=bce97493cef3c1c560486a4fcc94b2c435f5f747aa87e27eec2db58618681782&'], content: 'üëã –ß—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∏–∂–µ', components: [row] });
    }
});

client.on(Events.InteractionCreate, async interaction => {
    try {
        if (interaction.customId === 'openModal') {
            const modal = new ModalBuilder()
                .setCustomId('sendModal')
                .setTitle('–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤');

            const nameInput = new TextInputBuilder()
                .setCustomId('name')
                .setLabel('–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º')
                .setPlaceholder('karpen')
                .setStyle(TextInputStyle.Short);

            const ageInput = new TextInputBuilder()
                .setCustomId('age')
                .setLabel('–í–æ–∑—Ä–∞—Å—Ç/—Å—Ç–∞–∂ –≤ –∏–≥—Ä–µ')
                .setPlaceholder('17/10 –ª–µ—Ç')
                .setStyle(TextInputStyle.Short);

            const otherServersInput = new TextInputBuilder()
                .setCustomId('other')
                .setLabel('–ò–≥—Ä–∞–ª–∏ –ª–∏ –Ω–∞ –ø–æ–¥–æ–±–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö')
                .setPlaceholder('–î–∞ / –ù–µ—Ç ...')
                .setStyle(TextInputStyle.Short);

            const timeInput = new TextInputBuilder()
                .setCustomId('time')
                .setLabel('–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –≥–æ—Ç–æ–≤—ã —É–¥–µ–ª—è—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä')
                .setPlaceholder('2 - 3 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
                .setStyle(TextInputStyle.Short);

            const unInput = new TextInputBuilder()
                .setCustomId('un')
                .setLabel('–ü–æ—á–µ–º—É –º—ã –¥–æ–ª–∂–Ω—ã –≤–∑—è—Ç—å –∏–º–µ–Ω–Ω–æ –≤–∞—Å')
                .setPlaceholder('–Ø —Ö–æ—Ä–æ—à–∏–π —Å—Ç—Ä–æ–∏—Ç–µ–ª—å, —É–º–µ—é...')
                .setStyle(TextInputStyle.Paragraph)

                //const aboutInput = new TextInputBuilder()
                //.setCustomId('about')
                //.setLabel('–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ–±–µ')
                //.setStyle(TextInputStyle.Paragraph);

            const firstActionRow = new ActionRowBuilder().addComponents(nameInput);
            const secondActionRow = new ActionRowBuilder().addComponents(ageInput);
            //const thirdActionRow = new ActionRowBuilder().addComponents(aboutInput);
            const other = new ActionRowBuilder().addComponents(otherServersInput);
            const time = new ActionRowBuilder().addComponents(timeInput);
            const unicale = new ActionRowBuilder().addComponents(unInput);

            modal.addComponents(firstActionRow, secondActionRow, other, time, unicale);

            await interaction.showModal(modal);
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        if (interaction.isModalSubmit() && interaction.customId === 'sendModal') {
            const name = interaction.fields.getTextInputValue('name');
            const age = interaction.fields.getTextInputValue('age');
            //const about = interaction.fields.getTextInputValue('about');
            const other = interaction.fields.getTextInputValue('other');
            const unicale = interaction.fields.getTextInputValue('un');
            const time = interaction.fields.getTextInputValue('time');

            const member = interaction.guild.members.cache.get(interaction.user.id);
            const role = interaction.guild.roles.cache.find(r => r.name === 'waiting');
            if (role) {
                await member.roles.add(role).catch(console.error);
            }

            await member.setNickname(name);

            // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª
            const applicationChannel = client.channels.cache.get('1345627267119714367'); // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –∫–∞–Ω–∞–ª–∞
            const acceptButton = new ButtonBuilder()
                .setCustomId('accept')
                .setLabel('–ü—Ä–∏–Ω—è—Ç—å')
                .setStyle(ButtonStyle.Success);

            const rejectButton = new ButtonBuilder()
                .setCustomId('reject')
                .setLabel('–û—Ç–∫–ª–æ–Ω–∏—Ç—å')
                .setStyle(ButtonStyle.Danger);

            const row = new ActionRowBuilder().addComponents(acceptButton, rejectButton);

            await applicationChannel.send({
                content: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç ${name}:\n–í–æ–∑—Ä–∞—Å—Ç: ${age}\n–î—Ä—É–≥–∏–µ —Å–µ—Ä–≤–µ—Ä–∞: ${other} \n–í—Ä–µ–º—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä: ${time} \n–ß—Ç–æ –º–æ–∂–µ—Ç –¥–∞—Ç—å —Å–µ—Ä–≤–µ—Ä—É: ${unicale} \nID: ${interaction.user.id}`,
                components: [row],
            });

            await interaction.reply({ content: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!', ephemeral: true });
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
        if (interaction.isButton()) {
            const responseChannel = client.channels.cache.get('1345627664760963174');

            if (interaction.customId === 'accept') {
                await interaction.reply({ content: '–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!', ephemeral: true });
                const applicantId = interaction.message.content.split('ID: ')[1];
                const member = interaction.guild.members.cache.get(applicantId);

                const role = interaction.guild.roles.cache.find(r => r.name === 'Player');
                if (role) {
                    await member.roles.add(role).catch(console.error);
                }

                const roleTwo = interaction.guild.roles.cache.find(r => r.name === 'waiting');
                if (roleTwo){
                    await member.roles.remove(roleTwo).catch(console.error);
                }

                const messageToDelete = interaction.message;
                await messageToDelete.delete().catch(console.error);

                const info = new ButtonBuilder()
                    .setCustomId('info')
                    .setLabel('–ß—Ç–æ –¥–∞–ª—å—à–µ?')
                    .setStyle(ButtonStyle.Secondary)

                const row = new ActionRowBuilder().addComponents(info);

                await responseChannel.send({ content: `‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ ${member.displayName} –ø—Ä–∏–Ω—è—Ç.`, components: [row] });
            } else if (interaction.customId === 'reject') {
                await interaction.reply({ content: '–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!', ephemeral: true });
                const applicantId = interaction.message.content.split('ID: ')[1];

                const member = interaction.guild.members.cache.get(applicantId);
                const messageToDelete = interaction.message;

                const roleTwo = interaction.guild.roles.cache.find(r => r.name === 'waiting');
                if (roleTwo){
                    await member.roles.remove(roleTwo).catch(console.error);
                }

                const info = new ButtonBuilder()
                    .setCustomId('notAllowed')
                    .setLabel('–ß—Ç–æ –¥–µ–ª–∞—Ç—å?')
                    .setStyle(ButtonStyle.Secondary)

                const row = new ActionRowBuilder().addComponents(info);

                await messageToDelete.delete().catch(console.error);
                await responseChannel.send({ content: `‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ ${member.displayName} –Ω–µ –ø—Ä–∏–Ω—è—Ç.`, components: [row] });
            } else if (interaction.customId === 'info'){
                await interaction.reply({ content: `–í—ã –ø—Ä–∏–Ω—è—Ç—ã, –≤–∞—à –Ω–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞–π—Ç–ª–∏—Å—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É —á–∏–∞—Ç–π—Ç–µ <#1338192259010789526>`, ephemeral: true })
            } else if (interaction.customId === 'notAllowed'){
                await interaction.reply({ content: `–í–∞—à—É –∑–∞—è–≤–∫—É –æ—Ç–∫–ª–æ–Ω–∏–ª–∏, –Ω–æ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –ø—Ä–æ—Ö–æ–¥–∫—É –≤ <#1338192259010789526>, –∏–ª–∏ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.`, ephemeral: true });
            }
        }

    } catch (error) {
        console.error('Modal error:', error);
        await interaction.reply({ content: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', ephemeral: true });
    }
});

// –õ–æ–≥–∏–Ω –±–æ—Ç–∞
client.login(TOKEN);
